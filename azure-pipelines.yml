
trigger:
  branches:
    include:
      - main

variables:
  SONAR_TOKEN: 'bf3e593e2060d15d042dc60ec95338143794bc3b'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud'
    organization: 'julioazocar-1'
    scannerMode: 'Other'
    projectKey: 'project-microservicio-spring'
    projectName: 'project-microservicio-spring'
    extraProperties: |
      sonar.login=$(SONAR_TOKEN)
      sonar.coverage.exclusions=**/test/** # Opcional: Exclusiones de cobertura de pruebas

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: true
    testResultsFiles: '**/test-results/**/*.xml'
    tasks: 'build'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'build'
#- task: SonarCloudAnalyze@1
#  displayName: 'SonarCloud Analysis'

#- task: SonarCloudPublish@1
#  displayName: 'SonarCloud Publish'
#  inputs:
#    pollingTimeoutSec: '300'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    command: 'login'
- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'julinf/microservicio-spring'
    command: 'build'
    Dockerfile: '**/Dockerfile'
- task: Docker@2
  inputs:
    containerRegistry: 'Docker'
    repository: 'julinf/microservicio-spring'
    command: 'push'
